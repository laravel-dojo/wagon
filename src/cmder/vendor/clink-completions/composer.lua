local parser = clink.arg.new_parser

local composer_basic_parser = parser({
    "-h", "--help",
    "-q", "--quiet",
    "-V", "--version",
          "--ansi", "--no-ansi",
    "-n", "--no-interaction",
          "--profile",
          "--no-plugins",
          "--no-scripts",
    "-d", "--working-dir",
          "--no-cache",
    "-v", "vv", "vvv", "--verbose",
})

local composer_parser = parser({
    "about"..composer_basic_parser,
    "archive"..composer_basic_parser,
    "audit"..composer_basic_parser,
    "browse"..composer_basic_parser,
    "bump"..composer_basic_parser,
    "check-platform-reqs"..composer_basic_parser,
    "clear-cache"..composer_basic_parser,
    "completion"..composer_basic_parser,
    "config"..composer_basic_parser,
    "create-project"..composer_basic_parser,
    "depends"..composer_basic_parser,
    "diagnose"..composer_basic_parser,
    "dump-autoload"..composer_basic_parser,
    "exec"..composer_basic_parser,
    "fund"..composer_basic_parser,
    "global"..composer_basic_parser,
    "help"..composer_basic_parser,
    "init"..composer_basic_parser,
    "install"..composer_basic_parser,
    "licenses"..composer_basic_parser,
    "list"..composer_basic_parser,
    "outdated"..composer_basic_parser,
    "prohibits"..composer_basic_parser,
    "reinstall"..composer_basic_parser,
    "remove"..composer_basic_parser,
    "require"..composer_basic_parser,
    "run-script"..composer_basic_parser,
    "search"..composer_basic_parser,
    "self-update"..composer_basic_parser,
    "show"..composer_basic_parser,
    "status"..composer_basic_parser,
    "suggests"..composer_basic_parser,
    "update"..composer_basic_parser,
    "validate"..composer_basic_parser,
})

clink.arg.register_parser("composer", composer_parser)